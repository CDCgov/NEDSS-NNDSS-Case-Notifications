name: Bump Version and Raise PR

on:
  workflow_dispatch:
    inputs:
      microservice_name:
        description: "Select the microservice to release."
        required: true
        type: choice
        options:
          - xml-hl7-parser-service
          - case-notification-service
          - data-extraction-service
      new_version:
        description: "New version base (optional, will auto-increment if omitted)."
        required: false
        type: string
        default: ""

jobs:
  bump-version:
    runs-on: ubuntu-latest

    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Set up Git config for bot
        run: |
          git config --global user.name "${{ secrets.BOT_USERNAME }}"
          git config --global user.email "${{ secrets.BOT_EMAIL }}"

      - name: Determine new version if not provided
        id: versioning
        run: |
          gradle_path="./${{ inputs.microservice_name }}/build.gradle"
          current_version=$(grep "^version *= *" "$gradle_path" | sed -E "s/version *= *['\"]?([^'\"]*)['\"]?/\1/")
          echo "Current version is $current_version"

          if [ -z "${{ inputs.new_version }}" ]; then
            IFS='.' read -r major minor patch <<< "$(echo $current_version | sed 's/-RELEASE//')"
            minor=$((minor + 1))
            patch=0
            new_version="${major}.${minor}.${patch}-RELEASE"
          else
            base_version="${{ inputs.new_version }}"
            new_version="${base_version}-RELEASE"
          fi

          echo "new_version=$new_version" >> $GITHUB_OUTPUT

      - name: Update version in build.gradle
        run: |
          gradle_path="./${{ inputs.microservice_name }}/build.gradle"
          sed -i "s/^version = .*/version = '${{ steps.versioning.outputs.new_version }}'/" "$gradle_path"
          echo "Updated version in $gradle_path to ${{ steps.versioning.outputs.new_version }}"

      - name: Commit and create PR using bot
        id: create-pr
        env:
          GH_TOKEN: ${{ secrets.BOT_TOKEN }}
        run: |
          branch_name="version-bump-${{ inputs.microservice_name }}-${{ steps.versioning.outputs.new_version }}"
          git checkout -b "$branch_name"
          git add "./${{ inputs.microservice_name }}/build.gradle"
          git commit -m "chore: bump version of ${{ inputs.microservice_name }} to ${{ steps.versioning.outputs.new_version }}"
          git push --set-upstream origin "$branch_name"

          pr_url=$(gh pr create \
            --title "Bump ${{ inputs.microservice_name }} version to ${{ steps.versioning.outputs.new_version }}" \
            --body "This PR updates \`${{ inputs.microservice_name }}/build.gradle\` to \`${{ steps.versioning.outputs.new_version }}\`." \
            --base main \
            --head "$branch_name")

          echo "pr_url=$pr_url" >> $GITHUB_OUTPUT
          echo "branch_name=$branch_name" >> $GITHUB_OUTPUT

      - name: Approve PR using repo account
        env:
          GH_TOKEN: ${{ secrets.REPOS_TOKEN }}
        run: |
          gh pr review "version-bump-${{ inputs.microservice_name }}-${{ steps.versioning.outputs.new_version }}" --approve

      - name: Auto-merge the PR
        env:
          GH_TOKEN: ${{ secrets.REPOS_TOKEN }}
        run: |
          gh pr merge "version-bump-${{ inputs.microservice_name }}-${{ steps.versioning.outputs.new_version }}" --squash --delete-branch --admin
