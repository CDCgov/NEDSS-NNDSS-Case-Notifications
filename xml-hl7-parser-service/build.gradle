plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

springBoot {
    buildInfo()
}

group = 'gov.cdc'
version = '0.0.1'


repositories {
    mavenCentral()
}

configurations.all {
    resolutionStrategy {
        force 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    }
}


dependencies {
    implementation 'ca.uhn.hapi:hapi-base:2.5.1'
    implementation 'ca.uhn.hapi:hapi-structures-v25:2.5.1'
    implementation 'org.apache.kafka:kafka-clients:3.9.1'
    implementation 'org.springframework.kafka:spring-kafka'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.18.2'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-starter'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'  // JAXB API for Jakarta to bind xml to Java Objects
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'  // JAXB Runtime for Jakarta, for xml data conversion
    //implementation 'org.glassfish.jaxb:jaxb-xjc:2.3.1'  // JAXB xjc tool used to generate Java Classes from NBSNNDIntermediaryMessage.xsd schema
    implementation 'org.glassfish.jaxb:jaxb-xjc:4.0.5'
    implementation 'com.google.code.gson:gson:2.12.1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-core'
    implementation 'org.springframework.security:spring-security-config'
    implementation("org.apache.httpcomponents.core5:httpcore5:5.2.5")

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    compileOnly 'org.projectlombok:lombok:1.18.38'
    annotationProcessor 'org.projectlombok:lombok:1.18.38'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'com.microsoft.sqlserver:mssql-jdbc:12.8.1.jre11'

    // Swagger / openapi documentation
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.1'

    runtimeOnly 'com.nimbusds:oauth2-oidc-sdk:11.8'
}

dependencyManagement {
    dependencies {
        dependency 'org.apache.tomcat.embed:tomcat-embed-core:10.1.42'
        dependency 'org.apache.tomcat.embed:tomcat-embed-el:10.1.42'
        dependency 'org.apache.tomcat.embed:tomcat-embed-websocket:10.1.42'
    }
}



tasks.register('generateJAXBClasses', JavaExec) {
    // Java main class for running xjc
    mainClass = 'com.sun.tools.xjc.XJCFacade'

    //classpath for xjc tool
    classpath = configurations.compileClasspath

    // Arguments for generating classes from XSD schema file
    // run command: ./gradlew generateJAXBClasses and
    // classes will be generated under: src\main\java\gov\cdc\xmlhl7parserservice\model)
    args = ['-d', 'src/main/java', '-p', 'gov.cdc.xmlhl7parserservice.model.generated.jaxb', 'src/main/resources/NBSNNDIntermediaryMessage.xsd']
}

compileJava.dependsOn(generateJAXBClasses)

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

tasks.named('test') {
    useJUnitPlatform()
}